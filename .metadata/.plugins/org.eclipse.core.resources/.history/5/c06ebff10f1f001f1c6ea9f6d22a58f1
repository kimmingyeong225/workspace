package project4;

import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.HashMap;
import java.util.Map;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPasswordField;
import javax.swing.JTextField;
import javax.swing.SwingUtilities;

public class UserManagement {

    private static final String USER_FILE = "users.txt";
    private Map<String, String> users;

    public UserManagement() {
        users = new HashMap<>();
        loadUsers();
    }

    private void loadUsers() {
        try (BufferedReader reader = new BufferedReader(new FileReader(USER_FILE))) {
            String line;
            while ((line = reader.readLine()) != null) {
                String[] parts = line.split(",");
                if (parts.length == 2) {
                    users.put(parts[0], parts[1]);
                }
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    private void saveUsers() {
        try (BufferedWriter writer = new BufferedWriter(new FileWriter(USER_FILE))) {
            for (Map.Entry<String, String> entry : users.entrySet()) {
                writer.write(entry.getKey() + "," + entry.getValue());
                writer.newLine();
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    public boolean register(String username, String password) {
        if (users.containsKey(username)) {
            return false;
        }
        users.put(username, password);
        saveUsers();
        return true;
    }

    public boolean login(String username, String password) {
        return users.containsKey(username) && users.get(username).equals(password);
    }
    
    
    public class ManagementFrame  extends JFrame{

        private JTextField usernameField;
        private JPasswordField passwordField;
        private JButton loginButton;
        private JButton registerButton;
        private UserManagement userManagement;

        public ManagementFrame() {
            userManagement = new UserManagement();
            setTitle("로그인");
            setSize(300, 200);
            setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
            initLayout();
            addEventListeners();
        }

        private void initLayout() {
            usernameField = new JTextField();
            passwordField = new JPasswordField();
            loginButton = new JButton("로그인");
            registerButton = new JButton("회원가입");

            setLayout(new GridLayout(4, 1));
            add(new JLabel("이름:"));
            add(usernameField);
            add(new JLabel("패스워드:"));
            add(passwordField);
            add(loginButton);
            add(registerButton);
        }

        private void addEventListeners() {
            loginButton.addActionListener(new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {
                    login();
                }
            });

            registerButton.addActionListener(new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {
                    register();
                }
            });
        }

        private void login() {
            String username = usernameField.getText();
            String password = new String(passwordField.getPassword());
            if (userManagement.login(username, password)) {
                JOptionPane.showMessageDialog(this, "로그인 성공", "성공", JOptionPane.INFORMATION_MESSAGE);
                // 로그인 성공 후 메인 프레임을 띄우는 코드 추가
            } else {
                JOptionPane.showMessageDialog(this, "로그인 실패", "실패", JOptionPane.ERROR_MESSAGE);
            }
        }

        private void register() {
            String username = usernameField.getText();
            String password = new String(passwordField.getPassword());
            if (userManagement.register(username, password)) {
                JOptionPane.showMessageDialog(this, "회원가입 성공", "성공", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this, "회원가입 실패: 이미 존재하는 사용자입니다.", "실패", JOptionPane.ERROR_MESSAGE);
            }
        }

        public static void main(String[] args) {
            SwingUtilities.invokeLater(new Runnable() {
                @Override
                public void run() {
                    new LoginFrame().setVisible(true);
                }
            });
        }


    }

}


